#!/usr/bin/env python3

__author__ = 'Osama Ghozlan'
__maintainer__ = 'Osama Ghozlan'
__status__ = 'Kekw'
__version__ = '1.0.0'


"""Bulk download samples from MalwareBazaar"""

import requests
from bs4 import BeautifulSoup
import sys
import pyzipper
import argparse
import re

def download_file(data):
    """Function that downloads sample from API

    Args:
        data (dictionary): Dictionary containing the file hash and request type for API
    """
    response = requests.post('https://mb-api.abuse.ch/api/v1/', data=data, timeout=15, headers=headers, allow_redirects=True)
    file_hash = data['sha256_hash']
    if 'file_not_found' in response.text:
        print('[-]Error: file not found')
        sys.exit(1)
    else:
        open(f'{file_hash}.zip', 'wb').write(response.content)
        if(args.extract == True):  
            with pyzipper.AESZipFile(f'{file_hash}.zip') as zip_file:
                zip_file.pwd = ZIP_PASSWORD
                zip_file.extractall('.')  
                print(f'[+]Sample {file_hash} downloaded and unpacked.')
        else:
            print(f'[+]Sample {file_hash} downloaded.') 

def get_file_info(data):
    """Function that retrieves information about a certain sample from API

    Args:
        data (dictionary): Dictionary containing the file hash and request type for API
    """
    response = requests.post('https://mb-api.abuse.ch/api/v1/', data=data, timeout=15, headers=headers)
    print(response.content.decode('utf-8', 'ignore'))

def check_types(type):
    if str(type).lower() not in ['ps1', 'exe', 'doc', 'docx', 'xlsx', 'py', 'dll', 'js', 'apk', 'elf', 'gz', 'zip']:
        raise ValueError('Please enter a correct file type') 
    return str(type).lower()

def get_sha256(link):
    s = re.match('\/sample\/([a-zA-Z0-9]*)', link).groups()[0]
    if s == '' or len(s) != 64:
        raise ValueError('Please use sha256 hash')
    return str(s)



parser = argparse.ArgumentParser(description='Download malware samples from Malware Bazaar')
parser.add_argument('-t', '--type', help='Type of file to download', metavar='TYPE', required=True, type=check_types)
parser.add_argument('-x', '--extract', help='Extract the downloaded file', required=False, default=False, action='store_true')
parser.add_argument('-i', '--info', help='Get information on a hash', required=False, default=False, action='store_true')

args = parser.parse_args()

if(args.extract == True and args.info == True):
    print('[-]You can only select either extract or display information.')
    sys.exit(1)

html_ = requests.get(f'https://bazaar.abuse.ch/browse.php?search=file_type:{args.type}')
soup = BeautifulSoup(html_.text, 'html.parser')
hashes = [get_sha256(item['href']) for item in soup.find_all('a', class_='shortify', href=True)]

ZIP_PASSWORD = b'infected'
headers = {'API-KEY': 'API_KEY_HERE'}

if 'API_KEY_HERE' == headers['API-KEY']:
    print('[-]Please supply your own API key.')
    sys.exit(1)


if not args.info:
    data = {
        'query': 'get_file'
    }
    for hash in hashes:
        data['sha256_hash'] = hash
        download_file(data) 
else:
    data = {
        'query': 'get_info'
    }
    for hash in hashes:
        data['hash'] = hash
        get_file_info(data)
    
